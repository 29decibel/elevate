@import "~@angular/material/theming";

// Define a mixin that accepts a theme and outputs the color styles for the component.
@mixin fitness-trend-graph-theme($theme) {

	// Extract whichever individual palettes you need from the theme.
	$primary: map-get($theme, primary);
	$accent: map-get($theme, accent);

	// Using mat-color to extract individual colors from the palette
	$ctl-color: mat-color($accent);
	$atl-color: mat-color($primary);
	$tsb-color: mat-color($primary, 900);

	.atl_value {
		color: $atl-color;
	}
	.ctl_value {
		color: $ctl-color;
	}
	.tsb_value {
		color: $tsb-color;
	}

	#fitnessTrendGraph {

		// Lines
		.mg-area1-color {
			fill: $atl-color;
		}

		.mg-line1-color {
			stroke: $atl-color;
		}

		.mg-hover-line1-color {
			fill: $atl-color;
		}

		.mg-area2-color {
			fill: $ctl-color;
		}

		.mg-line2-color {
			stroke: $ctl-color;
		}

		.mg-hover-line2-color {
			fill: $ctl-color;
		}

		.mg-area3-color {
			fill: $tsb-color;
		}

		.mg-line3-color {
			stroke: $tsb-color;
		}

		.mg-hover-line3-color {
			fill: $tsb-color;
		}

		.mg-line4-color {
			stroke: $atl-color;
			stroke-dasharray: 5, 5;
		}

		.mg-area4-color {
			fill: $atl-color;
		}

		.mg-area5-color {
			fill: $ctl-color;
		}

		.mg-line5-color {
			stroke: $ctl-color;
			stroke-dasharray: 5, 5;
		}

		.mg-line5-color {
			stroke: $ctl-color;
		}

		.mg-area6-color {
			fill: $tsb-color;
		}

		.mg-line6-color {
			stroke: $tsb-color;
			stroke-dasharray: 5, 5;
		}

		.mg-hover-line6-color {
			fill: $tsb-color;
		}
	}

}
